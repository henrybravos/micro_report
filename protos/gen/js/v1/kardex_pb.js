// source: v1/kardex.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.v1.KardexValued', null, global);
goog.exportSymbol('proto.v1.RetrieveKardexValuedRequest', null, global);
goog.exportSymbol('proto.v1.RetrieveKardexValuedResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.KardexValued = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.KardexValued, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.KardexValued.displayName = 'proto.v1.KardexValued';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.RetrieveKardexValuedRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.v1.RetrieveKardexValuedRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.RetrieveKardexValuedRequest.displayName = 'proto.v1.RetrieveKardexValuedRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.v1.RetrieveKardexValuedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.v1.RetrieveKardexValuedResponse.repeatedFields_, null);
};
goog.inherits(proto.v1.RetrieveKardexValuedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.v1.RetrieveKardexValuedResponse.displayName = 'proto.v1.RetrieveKardexValuedResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.KardexValued.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.KardexValued.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.KardexValued} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.KardexValued.toObject = function(includeInstance, msg) {
  var f, obj = {
medida: jspb.Message.getFieldWithDefault(msg, 1, ""),
inventario: jspb.Message.getFieldWithDefault(msg, 2, ""),
existencia: jspb.Message.getFieldWithDefault(msg, 3, ""),
fechaEmision: jspb.Message.getFieldWithDefault(msg, 4, ""),
tipo: jspb.Message.getFieldWithDefault(msg, 5, ""),
serie: jspb.Message.getFieldWithDefault(msg, 6, ""),
numero: jspb.Message.getFieldWithDefault(msg, 7, ""),
tipoOpercion: jspb.Message.getFieldWithDefault(msg, 8, ""),
cantidad: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
costo: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
kardex: jspb.Message.getFieldWithDefault(msg, 11, ""),
libro: jspb.Message.getFieldWithDefault(msg, 12, ""),
equivalencia: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
categoria: jspb.Message.getFieldWithDefault(msg, 14, ""),
productoId: jspb.Message.getFieldWithDefault(msg, 15, ""),
codigoBarras: jspb.Message.getFieldWithDefault(msg, 16, ""),
tipoCambio: jspb.Message.getFieldWithDefault(msg, 17, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.KardexValued}
 */
proto.v1.KardexValued.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.KardexValued;
  return proto.v1.KardexValued.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.KardexValued} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.KardexValued}
 */
proto.v1.KardexValued.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMedida(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setInventario(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExistencia(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFechaEmision(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTipo(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSerie(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setNumero(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTipoOpercion(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCantidad(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCosto(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setKardex(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setLibro(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setEquivalencia(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoria(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductoId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodigoBarras(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTipoCambio(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.KardexValued.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.KardexValued.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.KardexValued} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.KardexValued.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMedida();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInventario();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExistencia();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFechaEmision();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTipo();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSerie();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getNumero();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTipoOpercion();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCantidad();
  if (f !== 0.0) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = message.getCosto();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getKardex();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getLibro();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getEquivalencia();
  if (f !== 0.0) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = message.getCategoria();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getProductoId();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getCodigoBarras();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getTipoCambio();
  if (f !== 0) {
    writer.writeInt32(
      17,
      f
    );
  }
};


/**
 * optional string medida = 1;
 * @return {string}
 */
proto.v1.KardexValued.prototype.getMedida = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.KardexValued} returns this
 */
proto.v1.KardexValued.prototype.setMedida = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string inventario = 2;
 * @return {string}
 */
proto.v1.KardexValued.prototype.getInventario = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.KardexValued} returns this
 */
proto.v1.KardexValued.prototype.setInventario = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string existencia = 3;
 * @return {string}
 */
proto.v1.KardexValued.prototype.getExistencia = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.KardexValued} returns this
 */
proto.v1.KardexValued.prototype.setExistencia = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string fecha_emision = 4;
 * @return {string}
 */
proto.v1.KardexValued.prototype.getFechaEmision = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.KardexValued} returns this
 */
proto.v1.KardexValued.prototype.setFechaEmision = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string tipo = 5;
 * @return {string}
 */
proto.v1.KardexValued.prototype.getTipo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.KardexValued} returns this
 */
proto.v1.KardexValued.prototype.setTipo = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string serie = 6;
 * @return {string}
 */
proto.v1.KardexValued.prototype.getSerie = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.KardexValued} returns this
 */
proto.v1.KardexValued.prototype.setSerie = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string numero = 7;
 * @return {string}
 */
proto.v1.KardexValued.prototype.getNumero = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.KardexValued} returns this
 */
proto.v1.KardexValued.prototype.setNumero = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string tipo_opercion = 8;
 * @return {string}
 */
proto.v1.KardexValued.prototype.getTipoOpercion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.KardexValued} returns this
 */
proto.v1.KardexValued.prototype.setTipoOpercion = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional float cantidad = 9;
 * @return {number}
 */
proto.v1.KardexValued.prototype.getCantidad = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.v1.KardexValued} returns this
 */
proto.v1.KardexValued.prototype.setCantidad = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float costo = 10;
 * @return {number}
 */
proto.v1.KardexValued.prototype.getCosto = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.v1.KardexValued} returns this
 */
proto.v1.KardexValued.prototype.setCosto = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional string kardex = 11;
 * @return {string}
 */
proto.v1.KardexValued.prototype.getKardex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.KardexValued} returns this
 */
proto.v1.KardexValued.prototype.setKardex = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string libro = 12;
 * @return {string}
 */
proto.v1.KardexValued.prototype.getLibro = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.KardexValued} returns this
 */
proto.v1.KardexValued.prototype.setLibro = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional float equivalencia = 13;
 * @return {number}
 */
proto.v1.KardexValued.prototype.getEquivalencia = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.v1.KardexValued} returns this
 */
proto.v1.KardexValued.prototype.setEquivalencia = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional string categoria = 14;
 * @return {string}
 */
proto.v1.KardexValued.prototype.getCategoria = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.KardexValued} returns this
 */
proto.v1.KardexValued.prototype.setCategoria = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string producto_id = 15;
 * @return {string}
 */
proto.v1.KardexValued.prototype.getProductoId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.KardexValued} returns this
 */
proto.v1.KardexValued.prototype.setProductoId = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string codigo_barras = 16;
 * @return {string}
 */
proto.v1.KardexValued.prototype.getCodigoBarras = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.KardexValued} returns this
 */
proto.v1.KardexValued.prototype.setCodigoBarras = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional int32 tipo_cambio = 17;
 * @return {number}
 */
proto.v1.KardexValued.prototype.getTipoCambio = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.v1.KardexValued} returns this
 */
proto.v1.KardexValued.prototype.setTipoCambio = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.RetrieveKardexValuedRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.RetrieveKardexValuedRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.RetrieveKardexValuedRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.RetrieveKardexValuedRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
localId: jspb.Message.getFieldWithDefault(msg, 1, ""),
period: jspb.Message.getFieldWithDefault(msg, 2, ""),
includeNotes: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
productId: jspb.Message.getFieldWithDefault(msg, 4, ""),
startDate: jspb.Message.getFieldWithDefault(msg, 5, ""),
endDate: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.RetrieveKardexValuedRequest}
 */
proto.v1.RetrieveKardexValuedRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.RetrieveKardexValuedRequest;
  return proto.v1.RetrieveKardexValuedRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.RetrieveKardexValuedRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.RetrieveKardexValuedRequest}
 */
proto.v1.RetrieveKardexValuedRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocalId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPeriod(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIncludeNotes(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProductId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartDate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.RetrieveKardexValuedRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.RetrieveKardexValuedRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.RetrieveKardexValuedRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.RetrieveKardexValuedRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocalId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPeriod();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIncludeNotes();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getProductId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStartDate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEndDate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string local_id = 1;
 * @return {string}
 */
proto.v1.RetrieveKardexValuedRequest.prototype.getLocalId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.RetrieveKardexValuedRequest} returns this
 */
proto.v1.RetrieveKardexValuedRequest.prototype.setLocalId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string period = 2;
 * @return {string}
 */
proto.v1.RetrieveKardexValuedRequest.prototype.getPeriod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.RetrieveKardexValuedRequest} returns this
 */
proto.v1.RetrieveKardexValuedRequest.prototype.setPeriod = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool include_notes = 3;
 * @return {boolean}
 */
proto.v1.RetrieveKardexValuedRequest.prototype.getIncludeNotes = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.v1.RetrieveKardexValuedRequest} returns this
 */
proto.v1.RetrieveKardexValuedRequest.prototype.setIncludeNotes = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string product_id = 4;
 * @return {string}
 */
proto.v1.RetrieveKardexValuedRequest.prototype.getProductId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.RetrieveKardexValuedRequest} returns this
 */
proto.v1.RetrieveKardexValuedRequest.prototype.setProductId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string start_date = 5;
 * @return {string}
 */
proto.v1.RetrieveKardexValuedRequest.prototype.getStartDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.RetrieveKardexValuedRequest} returns this
 */
proto.v1.RetrieveKardexValuedRequest.prototype.setStartDate = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string end_date = 6;
 * @return {string}
 */
proto.v1.RetrieveKardexValuedRequest.prototype.getEndDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.v1.RetrieveKardexValuedRequest} returns this
 */
proto.v1.RetrieveKardexValuedRequest.prototype.setEndDate = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.v1.RetrieveKardexValuedResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.v1.RetrieveKardexValuedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.v1.RetrieveKardexValuedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.v1.RetrieveKardexValuedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.RetrieveKardexValuedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.v1.KardexValued.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.v1.RetrieveKardexValuedResponse}
 */
proto.v1.RetrieveKardexValuedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.v1.RetrieveKardexValuedResponse;
  return proto.v1.RetrieveKardexValuedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.v1.RetrieveKardexValuedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.v1.RetrieveKardexValuedResponse}
 */
proto.v1.RetrieveKardexValuedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.v1.KardexValued;
      reader.readMessage(value,proto.v1.KardexValued.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.v1.RetrieveKardexValuedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.v1.RetrieveKardexValuedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.v1.RetrieveKardexValuedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.v1.RetrieveKardexValuedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.v1.KardexValued.serializeBinaryToWriter
    );
  }
};


/**
 * repeated KardexValued data = 1;
 * @return {!Array<!proto.v1.KardexValued>}
 */
proto.v1.RetrieveKardexValuedResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.v1.KardexValued>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.v1.KardexValued, 1));
};


/**
 * @param {!Array<!proto.v1.KardexValued>} value
 * @return {!proto.v1.RetrieveKardexValuedResponse} returns this
*/
proto.v1.RetrieveKardexValuedResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.v1.KardexValued=} opt_value
 * @param {number=} opt_index
 * @return {!proto.v1.KardexValued}
 */
proto.v1.RetrieveKardexValuedResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.v1.KardexValued, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.v1.RetrieveKardexValuedResponse} returns this
 */
proto.v1.RetrieveKardexValuedResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


goog.object.extend(exports, proto.v1);
