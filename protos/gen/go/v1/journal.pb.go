// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: v1/journal.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JournalEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Codigo       string  `protobuf:"bytes,2,opt,name=codigo,proto3" json:"codigo,omitempty"`
	Denominacion string  `protobuf:"bytes,3,opt,name=denominacion,proto3" json:"denominacion,omitempty"`
	EmpresaId    string  `protobuf:"bytes,4,opt,name=empresa_id,json=empresaId,proto3" json:"empresa_id,omitempty"`
	Efe          string  `protobuf:"bytes,5,opt,name=efe,proto3" json:"efe,omitempty"`
	Smvn         string  `protobuf:"bytes,6,opt,name=smvn,proto3" json:"smvn,omitempty"`
	Smve         string  `protobuf:"bytes,7,opt,name=smve,proto3" json:"smve,omitempty"`
	Tipo         string  `protobuf:"bytes,8,opt,name=tipo,proto3" json:"tipo,omitempty"`
	TipoId       string  `protobuf:"bytes,9,opt,name=tipo_id,json=tipoId,proto3" json:"tipo_id,omitempty"`
	Esf          bool    `protobuf:"varint,10,opt,name=esf,proto3" json:"esf,omitempty"`
	Erf          bool    `protobuf:"varint,11,opt,name=erf,proto3" json:"erf,omitempty"`
	Ern          bool    `protobuf:"varint,12,opt,name=ern,proto3" json:"ern,omitempty"`
	Efle         bool    `protobuf:"varint,13,opt,name=efle,proto3" json:"efle,omitempty"`
	Ecp          bool    `protobuf:"varint,14,opt,name=ecp,proto3" json:"ecp,omitempty"`
	CierreId     string  `protobuf:"bytes,15,opt,name=cierre_id,json=cierreId,proto3" json:"cierre_id,omitempty"`
	Sequence     int32   `protobuf:"varint,16,opt,name=sequence,proto3" json:"sequence,omitempty"`
	CreatedAt    string  `protobuf:"bytes,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    string  `protobuf:"bytes,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt    string  `protobuf:"bytes,19,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	Iidebe       float32 `protobuf:"fixed32,20,opt,name=iidebe,proto3" json:"iidebe,omitempty"`
	Iihaber      float32 `protobuf:"fixed32,21,opt,name=iihaber,proto3" json:"iihaber,omitempty"`
	Debe         float32 `protobuf:"fixed32,22,opt,name=debe,proto3" json:"debe,omitempty"`
	Haber        float32 `protobuf:"fixed32,23,opt,name=haber,proto3" json:"haber,omitempty"`
}

func (x *JournalEntry) Reset() {
	*x = JournalEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_journal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JournalEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JournalEntry) ProtoMessage() {}

func (x *JournalEntry) ProtoReflect() protoreflect.Message {
	mi := &file_v1_journal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JournalEntry.ProtoReflect.Descriptor instead.
func (*JournalEntry) Descriptor() ([]byte, []int) {
	return file_v1_journal_proto_rawDescGZIP(), []int{0}
}

func (x *JournalEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *JournalEntry) GetCodigo() string {
	if x != nil {
		return x.Codigo
	}
	return ""
}

func (x *JournalEntry) GetDenominacion() string {
	if x != nil {
		return x.Denominacion
	}
	return ""
}

func (x *JournalEntry) GetEmpresaId() string {
	if x != nil {
		return x.EmpresaId
	}
	return ""
}

func (x *JournalEntry) GetEfe() string {
	if x != nil {
		return x.Efe
	}
	return ""
}

func (x *JournalEntry) GetSmvn() string {
	if x != nil {
		return x.Smvn
	}
	return ""
}

func (x *JournalEntry) GetSmve() string {
	if x != nil {
		return x.Smve
	}
	return ""
}

func (x *JournalEntry) GetTipo() string {
	if x != nil {
		return x.Tipo
	}
	return ""
}

func (x *JournalEntry) GetTipoId() string {
	if x != nil {
		return x.TipoId
	}
	return ""
}

func (x *JournalEntry) GetEsf() bool {
	if x != nil {
		return x.Esf
	}
	return false
}

func (x *JournalEntry) GetErf() bool {
	if x != nil {
		return x.Erf
	}
	return false
}

func (x *JournalEntry) GetErn() bool {
	if x != nil {
		return x.Ern
	}
	return false
}

func (x *JournalEntry) GetEfle() bool {
	if x != nil {
		return x.Efle
	}
	return false
}

func (x *JournalEntry) GetEcp() bool {
	if x != nil {
		return x.Ecp
	}
	return false
}

func (x *JournalEntry) GetCierreId() string {
	if x != nil {
		return x.CierreId
	}
	return ""
}

func (x *JournalEntry) GetSequence() int32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *JournalEntry) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *JournalEntry) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *JournalEntry) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

func (x *JournalEntry) GetIidebe() float32 {
	if x != nil {
		return x.Iidebe
	}
	return 0
}

func (x *JournalEntry) GetIihaber() float32 {
	if x != nil {
		return x.Iihaber
	}
	return 0
}

func (x *JournalEntry) GetDebe() float32 {
	if x != nil {
		return x.Debe
	}
	return 0
}

func (x *JournalEntry) GetHaber() float32 {
	if x != nil {
		return x.Haber
	}
	return 0
}

type RetrieveJournalReportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId     string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	Period         string `protobuf:"bytes,2,opt,name=period,proto3" json:"period,omitempty"`
	IsConsolidated bool   `protobuf:"varint,3,opt,name=is_consolidated,json=isConsolidated,proto3" json:"is_consolidated,omitempty"`
	IncludeClose   bool   `protobuf:"varint,4,opt,name=include_close,json=includeClose,proto3" json:"include_close,omitempty"`
	IncludeCuBa    bool   `protobuf:"varint,5,opt,name=include_cu_ba,json=includeCuBa,proto3" json:"include_cu_ba,omitempty"`
}

func (x *RetrieveJournalReportRequest) Reset() {
	*x = RetrieveJournalReportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_journal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveJournalReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveJournalReportRequest) ProtoMessage() {}

func (x *RetrieveJournalReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_journal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveJournalReportRequest.ProtoReflect.Descriptor instead.
func (*RetrieveJournalReportRequest) Descriptor() ([]byte, []int) {
	return file_v1_journal_proto_rawDescGZIP(), []int{1}
}

func (x *RetrieveJournalReportRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *RetrieveJournalReportRequest) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *RetrieveJournalReportRequest) GetIsConsolidated() bool {
	if x != nil {
		return x.IsConsolidated
	}
	return false
}

func (x *RetrieveJournalReportRequest) GetIncludeClose() bool {
	if x != nil {
		return x.IncludeClose
	}
	return false
}

func (x *RetrieveJournalReportRequest) GetIncludeCuBa() bool {
	if x != nil {
		return x.IncludeCuBa
	}
	return false
}

type RetrieveJournalReportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Journals []*JournalEntry `protobuf:"bytes,1,rep,name=journals,proto3" json:"journals,omitempty"`
}

func (x *RetrieveJournalReportResponse) Reset() {
	*x = RetrieveJournalReportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_journal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveJournalReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveJournalReportResponse) ProtoMessage() {}

func (x *RetrieveJournalReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_journal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveJournalReportResponse.ProtoReflect.Descriptor instead.
func (*RetrieveJournalReportResponse) Descriptor() ([]byte, []int) {
	return file_v1_journal_proto_rawDescGZIP(), []int{2}
}

func (x *RetrieveJournalReportResponse) GetJournals() []*JournalEntry {
	if x != nil {
		return x.Journals
	}
	return nil
}

type GeneralJournal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cuo          string  `protobuf:"bytes,2,opt,name=cuo,proto3" json:"cuo,omitempty"`
	Operacion    string  `protobuf:"bytes,3,opt,name=operacion,proto3" json:"operacion,omitempty"`
	Descripcion  string  `protobuf:"bytes,4,opt,name=descripcion,proto3" json:"descripcion,omitempty"`
	Cuenta       string  `protobuf:"bytes,5,opt,name=cuenta,proto3" json:"cuenta,omitempty"`
	Denominacion string  `protobuf:"bytes,6,opt,name=denominacion,proto3" json:"denominacion,omitempty"`
	Debe         float32 `protobuf:"fixed32,7,opt,name=debe,proto3" json:"debe,omitempty"`
	Haber        float32 `protobuf:"fixed32,8,opt,name=haber,proto3" json:"haber,omitempty"`
	Suma_18      float32 `protobuf:"fixed32,9,opt,name=suma_18,json=suma18,proto3" json:"suma_18,omitempty"`
	Suma_19      float32 `protobuf:"fixed32,10,opt,name=suma_19,json=suma19,proto3" json:"suma_19,omitempty"`
	Car          string  `protobuf:"bytes,11,opt,name=car,proto3" json:"car,omitempty"`
}

func (x *GeneralJournal) Reset() {
	*x = GeneralJournal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_journal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralJournal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralJournal) ProtoMessage() {}

func (x *GeneralJournal) ProtoReflect() protoreflect.Message {
	mi := &file_v1_journal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralJournal.ProtoReflect.Descriptor instead.
func (*GeneralJournal) Descriptor() ([]byte, []int) {
	return file_v1_journal_proto_rawDescGZIP(), []int{3}
}

func (x *GeneralJournal) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GeneralJournal) GetCuo() string {
	if x != nil {
		return x.Cuo
	}
	return ""
}

func (x *GeneralJournal) GetOperacion() string {
	if x != nil {
		return x.Operacion
	}
	return ""
}

func (x *GeneralJournal) GetDescripcion() string {
	if x != nil {
		return x.Descripcion
	}
	return ""
}

func (x *GeneralJournal) GetCuenta() string {
	if x != nil {
		return x.Cuenta
	}
	return ""
}

func (x *GeneralJournal) GetDenominacion() string {
	if x != nil {
		return x.Denominacion
	}
	return ""
}

func (x *GeneralJournal) GetDebe() float32 {
	if x != nil {
		return x.Debe
	}
	return 0
}

func (x *GeneralJournal) GetHaber() float32 {
	if x != nil {
		return x.Haber
	}
	return 0
}

func (x *GeneralJournal) GetSuma_18() float32 {
	if x != nil {
		return x.Suma_18
	}
	return 0
}

func (x *GeneralJournal) GetSuma_19() float32 {
	if x != nil {
		return x.Suma_19
	}
	return 0
}

func (x *GeneralJournal) GetCar() string {
	if x != nil {
		return x.Car
	}
	return ""
}

type RetrieveGeneralJournalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	Period     string `protobuf:"bytes,2,opt,name=period,proto3" json:"period,omitempty"`
}

func (x *RetrieveGeneralJournalRequest) Reset() {
	*x = RetrieveGeneralJournalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_journal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveGeneralJournalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveGeneralJournalRequest) ProtoMessage() {}

func (x *RetrieveGeneralJournalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_journal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveGeneralJournalRequest.ProtoReflect.Descriptor instead.
func (*RetrieveGeneralJournalRequest) Descriptor() ([]byte, []int) {
	return file_v1_journal_proto_rawDescGZIP(), []int{4}
}

func (x *RetrieveGeneralJournalRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *RetrieveGeneralJournalRequest) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

type RetrieveGeneralJournalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeneralJournals []*GeneralJournal `protobuf:"bytes,1,rep,name=general_journals,json=generalJournals,proto3" json:"general_journals,omitempty"`
}

func (x *RetrieveGeneralJournalResponse) Reset() {
	*x = RetrieveGeneralJournalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_journal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveGeneralJournalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveGeneralJournalResponse) ProtoMessage() {}

func (x *RetrieveGeneralJournalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_journal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveGeneralJournalResponse.ProtoReflect.Descriptor instead.
func (*RetrieveGeneralJournalResponse) Descriptor() ([]byte, []int) {
	return file_v1_journal_proto_rawDescGZIP(), []int{5}
}

func (x *RetrieveGeneralJournalResponse) GetGeneralJournals() []*GeneralJournal {
	if x != nil {
		return x.GeneralJournals
	}
	return nil
}

type MajorBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OId               string  `protobuf:"bytes,1,opt,name=o_id,json=oId,proto3" json:"o_id,omitempty"`
	OCuoDTipo         string  `protobuf:"bytes,2,opt,name=o_cuo_d_tipo,json=oCuoDTipo,proto3" json:"o_cuo_d_tipo,omitempty"`
	DIdentificador    string  `protobuf:"bytes,3,opt,name=d_identificador,json=dIdentificador,proto3" json:"d_identificador,omitempty"`
	P2Codigo          string  `protobuf:"bytes,4,opt,name=p2_codigo,json=p2Codigo,proto3" json:"p2_codigo,omitempty"`
	P2Denominacion    string  `protobuf:"bytes,5,opt,name=p2_denominacion,json=p2Denominacion,proto3" json:"p2_denominacion,omitempty"`
	DUnidadOperacion  string  `protobuf:"bytes,6,opt,name=d_unidad_operacion,json=dUnidadOperacion,proto3" json:"d_unidad_operacion,omitempty"`
	DCentroCosto      string  `protobuf:"bytes,7,opt,name=d_centro_costo,json=dCentroCosto,proto3" json:"d_centro_costo,omitempty"`
	OSerie            string  `protobuf:"bytes,8,opt,name=o_serie,json=oSerie,proto3" json:"o_serie,omitempty"`
	OCorrelativo      string  `protobuf:"bytes,9,opt,name=o_correlativo,json=oCorrelativo,proto3" json:"o_correlativo,omitempty"`
	OFechaContable    string  `protobuf:"bytes,10,opt,name=o_fecha_contable,json=oFechaContable,proto3" json:"o_fecha_contable,omitempty"`
	OFechaVencimiento string  `protobuf:"bytes,11,opt,name=o_fecha_vencimiento,json=oFechaVencimiento,proto3" json:"o_fecha_vencimiento,omitempty"`
	OFechaEmision     string  `protobuf:"bytes,12,opt,name=o_fecha_emision,json=oFechaEmision,proto3" json:"o_fecha_emision,omitempty"`
	PgFecha           string  `protobuf:"bytes,13,opt,name=pg_fecha,json=pgFecha,proto3" json:"pg_fecha,omitempty"`
	OGlosa            string  `protobuf:"bytes,14,opt,name=o_glosa,json=oGlosa,proto3" json:"o_glosa,omitempty"`
	PgGlosa           string  `protobuf:"bytes,15,opt,name=pg_glosa,json=pgGlosa,proto3" json:"pg_glosa,omitempty"`
	OGlosaReferencia  string  `protobuf:"bytes,16,opt,name=o_glosa_referencia,json=oGlosaReferencia,proto3" json:"o_glosa_referencia,omitempty"`
	DDebe             float32 `protobuf:"fixed32,17,opt,name=d_debe,json=dDebe,proto3" json:"d_debe,omitempty"`
	DHaber            float32 `protobuf:"fixed32,18,opt,name=d_haber,json=dHaber,proto3" json:"d_haber,omitempty"`
	ODatoEstructurado string  `protobuf:"bytes,19,opt,name=o_dato_estructurado,json=oDatoEstructurado,proto3" json:"o_dato_estructurado,omitempty"`
	DEstado           string  `protobuf:"bytes,20,opt,name=d_estado,json=dEstado,proto3" json:"d_estado,omitempty"`
	OEstadoLe         string  `protobuf:"bytes,21,opt,name=o_estado_le,json=oEstadoLe,proto3" json:"o_estado_le,omitempty"`
	OTipoCambio       float32 `protobuf:"fixed32,22,opt,name=o_tipo_cambio,json=oTipoCambio,proto3" json:"o_tipo_cambio,omitempty"`
	OCodigoLibro      string  `protobuf:"bytes,23,opt,name=o_codigo_libro,json=oCodigoLibro,proto3" json:"o_codigo_libro,omitempty"`
	OPeriodo          string  `protobuf:"bytes,24,opt,name=o_periodo,json=oPeriodo,proto3" json:"o_periodo,omitempty"`
	DPeriodo          string  `protobuf:"bytes,25,opt,name=d_periodo,json=dPeriodo,proto3" json:"d_periodo,omitempty"`
	OCuo              string  `protobuf:"bytes,26,opt,name=o_cuo,json=oCuo,proto3" json:"o_cuo,omitempty"`
	OObservaciones    string  `protobuf:"bytes,27,opt,name=o_observaciones,json=oObservaciones,proto3" json:"o_observaciones,omitempty"`
	P2Id              string  `protobuf:"bytes,28,opt,name=p2_id,json=p2Id,proto3" json:"p2_id,omitempty"`
	PgTipoCambio      string  `protobuf:"bytes,29,opt,name=pg_tipo_cambio,json=pgTipoCambio,proto3" json:"pg_tipo_cambio,omitempty"`
}

func (x *MajorBook) Reset() {
	*x = MajorBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_journal_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MajorBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MajorBook) ProtoMessage() {}

func (x *MajorBook) ProtoReflect() protoreflect.Message {
	mi := &file_v1_journal_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MajorBook.ProtoReflect.Descriptor instead.
func (*MajorBook) Descriptor() ([]byte, []int) {
	return file_v1_journal_proto_rawDescGZIP(), []int{6}
}

func (x *MajorBook) GetOId() string {
	if x != nil {
		return x.OId
	}
	return ""
}

func (x *MajorBook) GetOCuoDTipo() string {
	if x != nil {
		return x.OCuoDTipo
	}
	return ""
}

func (x *MajorBook) GetDIdentificador() string {
	if x != nil {
		return x.DIdentificador
	}
	return ""
}

func (x *MajorBook) GetP2Codigo() string {
	if x != nil {
		return x.P2Codigo
	}
	return ""
}

func (x *MajorBook) GetP2Denominacion() string {
	if x != nil {
		return x.P2Denominacion
	}
	return ""
}

func (x *MajorBook) GetDUnidadOperacion() string {
	if x != nil {
		return x.DUnidadOperacion
	}
	return ""
}

func (x *MajorBook) GetDCentroCosto() string {
	if x != nil {
		return x.DCentroCosto
	}
	return ""
}

func (x *MajorBook) GetOSerie() string {
	if x != nil {
		return x.OSerie
	}
	return ""
}

func (x *MajorBook) GetOCorrelativo() string {
	if x != nil {
		return x.OCorrelativo
	}
	return ""
}

func (x *MajorBook) GetOFechaContable() string {
	if x != nil {
		return x.OFechaContable
	}
	return ""
}

func (x *MajorBook) GetOFechaVencimiento() string {
	if x != nil {
		return x.OFechaVencimiento
	}
	return ""
}

func (x *MajorBook) GetOFechaEmision() string {
	if x != nil {
		return x.OFechaEmision
	}
	return ""
}

func (x *MajorBook) GetPgFecha() string {
	if x != nil {
		return x.PgFecha
	}
	return ""
}

func (x *MajorBook) GetOGlosa() string {
	if x != nil {
		return x.OGlosa
	}
	return ""
}

func (x *MajorBook) GetPgGlosa() string {
	if x != nil {
		return x.PgGlosa
	}
	return ""
}

func (x *MajorBook) GetOGlosaReferencia() string {
	if x != nil {
		return x.OGlosaReferencia
	}
	return ""
}

func (x *MajorBook) GetDDebe() float32 {
	if x != nil {
		return x.DDebe
	}
	return 0
}

func (x *MajorBook) GetDHaber() float32 {
	if x != nil {
		return x.DHaber
	}
	return 0
}

func (x *MajorBook) GetODatoEstructurado() string {
	if x != nil {
		return x.ODatoEstructurado
	}
	return ""
}

func (x *MajorBook) GetDEstado() string {
	if x != nil {
		return x.DEstado
	}
	return ""
}

func (x *MajorBook) GetOEstadoLe() string {
	if x != nil {
		return x.OEstadoLe
	}
	return ""
}

func (x *MajorBook) GetOTipoCambio() float32 {
	if x != nil {
		return x.OTipoCambio
	}
	return 0
}

func (x *MajorBook) GetOCodigoLibro() string {
	if x != nil {
		return x.OCodigoLibro
	}
	return ""
}

func (x *MajorBook) GetOPeriodo() string {
	if x != nil {
		return x.OPeriodo
	}
	return ""
}

func (x *MajorBook) GetDPeriodo() string {
	if x != nil {
		return x.DPeriodo
	}
	return ""
}

func (x *MajorBook) GetOCuo() string {
	if x != nil {
		return x.OCuo
	}
	return ""
}

func (x *MajorBook) GetOObservaciones() string {
	if x != nil {
		return x.OObservaciones
	}
	return ""
}

func (x *MajorBook) GetP2Id() string {
	if x != nil {
		return x.P2Id
	}
	return ""
}

func (x *MajorBook) GetPgTipoCambio() string {
	if x != nil {
		return x.PgTipoCambio
	}
	return ""
}

type RetrieveMajorBookRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId     string `protobuf:"bytes,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	Period         string `protobuf:"bytes,2,opt,name=period,proto3" json:"period,omitempty"`
	IsConsolidated bool   `protobuf:"varint,3,opt,name=is_consolidated,json=isConsolidated,proto3" json:"is_consolidated,omitempty"`
	IncludeClose   bool   `protobuf:"varint,4,opt,name=include_close,json=includeClose,proto3" json:"include_close,omitempty"`
	IncludeCuBa    bool   `protobuf:"varint,5,opt,name=include_cu_ba,json=includeCuBa,proto3" json:"include_cu_ba,omitempty"`
	LfType         string `protobuf:"bytes,6,opt,name=lf_type,json=lfType,proto3" json:"lf_type,omitempty"`
}

func (x *RetrieveMajorBookRequest) Reset() {
	*x = RetrieveMajorBookRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_journal_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveMajorBookRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveMajorBookRequest) ProtoMessage() {}

func (x *RetrieveMajorBookRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_journal_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveMajorBookRequest.ProtoReflect.Descriptor instead.
func (*RetrieveMajorBookRequest) Descriptor() ([]byte, []int) {
	return file_v1_journal_proto_rawDescGZIP(), []int{7}
}

func (x *RetrieveMajorBookRequest) GetBusinessId() string {
	if x != nil {
		return x.BusinessId
	}
	return ""
}

func (x *RetrieveMajorBookRequest) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

func (x *RetrieveMajorBookRequest) GetIsConsolidated() bool {
	if x != nil {
		return x.IsConsolidated
	}
	return false
}

func (x *RetrieveMajorBookRequest) GetIncludeClose() bool {
	if x != nil {
		return x.IncludeClose
	}
	return false
}

func (x *RetrieveMajorBookRequest) GetIncludeCuBa() bool {
	if x != nil {
		return x.IncludeCuBa
	}
	return false
}

func (x *RetrieveMajorBookRequest) GetLfType() string {
	if x != nil {
		return x.LfType
	}
	return ""
}

type RetrieveMajorBookResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*MajorBook `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *RetrieveMajorBookResponse) Reset() {
	*x = RetrieveMajorBookResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_journal_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveMajorBookResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveMajorBookResponse) ProtoMessage() {}

func (x *RetrieveMajorBookResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_journal_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveMajorBookResponse.ProtoReflect.Descriptor instead.
func (*RetrieveMajorBookResponse) Descriptor() ([]byte, []int) {
	return file_v1_journal_proto_rawDescGZIP(), []int{8}
}

func (x *RetrieveMajorBookResponse) GetData() []*MajorBook {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_v1_journal_proto protoreflect.FileDescriptor

var file_v1_journal_proto_rawDesc = []byte{
	0x0a, 0x10, 0x76, 0x31, 0x2f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x22, 0xae, 0x04, 0x0a, 0x0c, 0x4a, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x67,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x63,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x61,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x66, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x65, 0x66, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6d, 0x76, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x6d, 0x76, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6d, 0x76, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6d, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x70, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x70, 0x6f,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x69, 0x70, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x69, 0x70, 0x6f, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x73, 0x66,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x65, 0x73, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x72, 0x66, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x65, 0x72, 0x66, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x72, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x65, 0x72, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x65, 0x66, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x65,
	0x66, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x63, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x03, 0x65, 0x63, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x69, 0x65, 0x72, 0x72, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x65, 0x72, 0x72, 0x65,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x69, 0x64, 0x65, 0x62, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x69, 0x69, 0x64,
	0x65, 0x62, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x69, 0x68, 0x61, 0x62, 0x65, 0x72, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x69, 0x69, 0x68, 0x61, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x62, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x64, 0x65, 0x62,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x61, 0x62, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x68, 0x61, 0x62, 0x65, 0x72, 0x22, 0xc9, 0x01, 0x0a, 0x1c, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x43, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x75, 0x5f, 0x62, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43,
	0x75, 0x42, 0x61, 0x22, 0x4d, 0x0a, 0x1d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4a,
	0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6c, 0x73, 0x22, 0x9c, 0x02, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x4a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x75, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x63, 0x75, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x63, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x63, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x63, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x63, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x65, 0x6e, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x65, 0x6e, 0x74, 0x61, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x63,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x62, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x64, 0x65, 0x62, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x61, 0x62, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x68, 0x61, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x75, 0x6d, 0x61, 0x5f, 0x31, 0x38, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x73, 0x75, 0x6d, 0x61, 0x31, 0x38, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x61, 0x5f, 0x31,
	0x39, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x73, 0x75, 0x6d, 0x61, 0x31, 0x39, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x61,
	0x72, 0x22, 0x58, 0x0a, 0x1d, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x5f, 0x0a, 0x1e, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x4a, 0x6f,
	0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x10, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x0f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x73, 0x22, 0xd7, 0x07, 0x0a,
	0x09, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x11, 0x0a, 0x04, 0x6f, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0c, 0x6f, 0x5f, 0x63, 0x75, 0x6f, 0x5f, 0x64, 0x5f, 0x74, 0x69, 0x70, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x43, 0x75, 0x6f, 0x44, 0x54, 0x69, 0x70, 0x6f, 0x12, 0x27,
	0x0a, 0x0f, 0x64, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x64, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x64, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x32, 0x5f, 0x63, 0x6f,
	0x64, 0x69, 0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x32, 0x43, 0x6f,
	0x64, 0x69, 0x67, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x32, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d,
	0x69, 0x6e, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x32, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a,
	0x12, 0x64, 0x5f, 0x75, 0x6e, 0x69, 0x64, 0x61, 0x64, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x63,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x55, 0x6e, 0x69, 0x64,
	0x61, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x64,
	0x5f, 0x63, 0x65, 0x6e, 0x74, 0x72, 0x6f, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x6f, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x43, 0x65, 0x6e, 0x74, 0x72, 0x6f, 0x43, 0x6f, 0x73, 0x74,
	0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x53, 0x65, 0x72, 0x69, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x5f,
	0x63, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6f, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x6f, 0x12,
	0x28, 0x0a, 0x10, 0x6f, 0x5f, 0x66, 0x65, 0x63, 0x68, 0x61, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x46, 0x65, 0x63, 0x68,
	0x61, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6f, 0x5f, 0x66,
	0x65, 0x63, 0x68, 0x61, 0x5f, 0x76, 0x65, 0x6e, 0x63, 0x69, 0x6d, 0x69, 0x65, 0x6e, 0x74, 0x6f,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x46, 0x65, 0x63, 0x68, 0x61, 0x56, 0x65,
	0x6e, 0x63, 0x69, 0x6d, 0x69, 0x65, 0x6e, 0x74, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x5f, 0x66,
	0x65, 0x63, 0x68, 0x61, 0x5f, 0x65, 0x6d, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6f, 0x46, 0x65, 0x63, 0x68, 0x61, 0x45, 0x6d, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x67, 0x5f, 0x66, 0x65, 0x63, 0x68, 0x61, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x67, 0x46, 0x65, 0x63, 0x68, 0x61, 0x12, 0x17, 0x0a, 0x07,
	0x6f, 0x5f, 0x67, 0x6c, 0x6f, 0x73, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x47, 0x6c, 0x6f, 0x73, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x67, 0x5f, 0x67, 0x6c, 0x6f, 0x73,
	0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x67, 0x47, 0x6c, 0x6f, 0x73, 0x61,
	0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x5f, 0x67, 0x6c, 0x6f, 0x73, 0x61, 0x5f, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x47,
	0x6c, 0x6f, 0x73, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x69, 0x61, 0x12, 0x15,
	0x0a, 0x06, 0x64, 0x5f, 0x64, 0x65, 0x62, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x64, 0x44, 0x65, 0x62, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x5f, 0x68, 0x61, 0x62, 0x65, 0x72,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x64, 0x48, 0x61, 0x62, 0x65, 0x72, 0x12, 0x2e,
	0x0a, 0x13, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x6f, 0x5f, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x75, 0x72, 0x61, 0x64, 0x6f, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x44, 0x61,
	0x74, 0x6f, 0x45, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x75, 0x72, 0x61, 0x64, 0x6f, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x5f, 0x65, 0x73, 0x74, 0x61, 0x64, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x45, 0x73, 0x74, 0x61, 0x64, 0x6f, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x5f, 0x65,
	0x73, 0x74, 0x61, 0x64, 0x6f, 0x5f, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x45, 0x73, 0x74, 0x61, 0x64, 0x6f, 0x4c, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x5f, 0x74,
	0x69, 0x70, 0x6f, 0x5f, 0x63, 0x61, 0x6d, 0x62, 0x69, 0x6f, 0x18, 0x16, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x6f, 0x54, 0x69, 0x70, 0x6f, 0x43, 0x61, 0x6d, 0x62, 0x69, 0x6f, 0x12, 0x24, 0x0a,
	0x0e, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x5f, 0x6c, 0x69, 0x62, 0x72, 0x6f, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x43, 0x6f, 0x64, 0x69, 0x67, 0x6f, 0x4c, 0x69,
	0x62, 0x72, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x6f,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x6f,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x6f, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x6f, 0x12, 0x13, 0x0a,
	0x05, 0x6f, 0x5f, 0x63, 0x75, 0x6f, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6f, 0x43,
	0x75, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x63,
	0x69, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x4f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x61, 0x63, 0x69, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x13, 0x0a, 0x05, 0x70,
	0x32, 0x5f, 0x69, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x32, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x70, 0x67, 0x5f, 0x74, 0x69, 0x70, 0x6f, 0x5f, 0x63, 0x61, 0x6d, 0x62,
	0x69, 0x6f, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x67, 0x54, 0x69, 0x70, 0x6f,
	0x43, 0x61, 0x6d, 0x62, 0x69, 0x6f, 0x22, 0xde, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x63, 0x75, 0x5f, 0x62, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x75, 0x42, 0x61, 0x12, 0x17,
	0x0a, 0x07, 0x6c, 0x66, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x66, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3e, 0x0a, 0x19, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x42, 0x6f, 0x6f,
	0x6b, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xa1, 0x02, 0x0a, 0x0e, 0x4a, 0x6f, 0x75, 0x72,
	0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x15, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76,
	0x65, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x16, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x4a, 0x6f, 0x75, 0x72, 0x6e,
	0x61, 0x6c, 0x12, 0x21, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69,
	0x65, 0x76, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x1c,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4d, 0x61, 0x6a, 0x6f,
	0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x42,
	0x6f, 0x6f, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x73, 0x0a, 0x06, 0x63,
	0x6f, 0x6d, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x4a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x68, 0x65, 0x6e, 0x72, 0x79, 0x62, 0x72, 0x61, 0x76, 0x6f, 0x2f, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x56, 0x58, 0x58,
	0xaa, 0x02, 0x02, 0x56, 0x31, 0xca, 0x02, 0x02, 0x56, 0x31, 0xe2, 0x02, 0x0e, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x02, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_journal_proto_rawDescOnce sync.Once
	file_v1_journal_proto_rawDescData = file_v1_journal_proto_rawDesc
)

func file_v1_journal_proto_rawDescGZIP() []byte {
	file_v1_journal_proto_rawDescOnce.Do(func() {
		file_v1_journal_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_journal_proto_rawDescData)
	})
	return file_v1_journal_proto_rawDescData
}

var file_v1_journal_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_v1_journal_proto_goTypes = []any{
	(*JournalEntry)(nil),                   // 0: v1.JournalEntry
	(*RetrieveJournalReportRequest)(nil),   // 1: v1.RetrieveJournalReportRequest
	(*RetrieveJournalReportResponse)(nil),  // 2: v1.RetrieveJournalReportResponse
	(*GeneralJournal)(nil),                 // 3: v1.GeneralJournal
	(*RetrieveGeneralJournalRequest)(nil),  // 4: v1.RetrieveGeneralJournalRequest
	(*RetrieveGeneralJournalResponse)(nil), // 5: v1.RetrieveGeneralJournalResponse
	(*MajorBook)(nil),                      // 6: v1.MajorBook
	(*RetrieveMajorBookRequest)(nil),       // 7: v1.RetrieveMajorBookRequest
	(*RetrieveMajorBookResponse)(nil),      // 8: v1.RetrieveMajorBookResponse
}
var file_v1_journal_proto_depIdxs = []int32{
	0, // 0: v1.RetrieveJournalReportResponse.journals:type_name -> v1.JournalEntry
	3, // 1: v1.RetrieveGeneralJournalResponse.general_journals:type_name -> v1.GeneralJournal
	6, // 2: v1.RetrieveMajorBookResponse.data:type_name -> v1.MajorBook
	1, // 3: v1.JournalService.RetrieveJournalReport:input_type -> v1.RetrieveJournalReportRequest
	4, // 4: v1.JournalService.RetrieveGeneralJournal:input_type -> v1.RetrieveGeneralJournalRequest
	7, // 5: v1.JournalService.RetrieveMajorBook:input_type -> v1.RetrieveMajorBookRequest
	2, // 6: v1.JournalService.RetrieveJournalReport:output_type -> v1.RetrieveJournalReportResponse
	5, // 7: v1.JournalService.RetrieveGeneralJournal:output_type -> v1.RetrieveGeneralJournalResponse
	8, // 8: v1.JournalService.RetrieveMajorBook:output_type -> v1.RetrieveMajorBookResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_v1_journal_proto_init() }
func file_v1_journal_proto_init() {
	if File_v1_journal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_journal_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*JournalEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_journal_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*RetrieveJournalReportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_journal_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*RetrieveJournalReportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_journal_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GeneralJournal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_journal_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RetrieveGeneralJournalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_journal_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*RetrieveGeneralJournalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_journal_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*MajorBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_journal_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*RetrieveMajorBookRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_journal_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*RetrieveMajorBookResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_journal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_journal_proto_goTypes,
		DependencyIndexes: file_v1_journal_proto_depIdxs,
		MessageInfos:      file_v1_journal_proto_msgTypes,
	}.Build()
	File_v1_journal_proto = out.File
	file_v1_journal_proto_rawDesc = nil
	file_v1_journal_proto_goTypes = nil
	file_v1_journal_proto_depIdxs = nil
}
